[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "omni-ai"
version = "0.1.0"
description = "Safe, ethical AI tools."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{ name = "Pratyay Paul", email = "235311756+pratyaypaul6187-art@users.noreply.github.com" }]
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "requests>=2.31.0",
    "pathlib>=1.0.0",
    "textstat>=0.7.0",
    "nltk>=3.8.0",
    # Security & Cryptography
    "cryptography>=41.0.0",
    "bcrypt>=4.0.0",
    "pyjwt[crypto]>=2.8.0",
    "passlib[bcrypt]>=1.7.4",
    # Input Validation & Sanitization
    "pydantic>=2.4.0",
    "bleach>=6.0.0",
    "validators>=0.22.0",
    "python-multipart>=0.0.6",
    # Monitoring & Logging
    "structlog>=23.2.0",
    "psutil>=5.9.0",
]

[project.scripts]
omni-ai = "omni_ai.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    # Security Testing
    "bandit[toml]>=1.7.5",
    "safety>=2.3.0",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.pytest.ini_options]
minversion = "7.4"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=omni_ai",
    "--cov-report=term-missing",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\.)?abstractmethod",
]
